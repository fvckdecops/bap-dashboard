name: Deployment Workflow

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: "Download required files"
        run: |
          mkdir -p json
          rm -f json/_about.json && curl -o json/_about.json ${{ secrets.ABOUT_DATA }}
          rm -f json/_experiences.json && curl -o json/_experiences.json ${{ secrets.EXPERIENCE_DATA }}
          rm -f json/_projects.json && curl -o json/_projects.json ${{ secrets.PROJECT_DATA }}
          rm -f .env && curl -o .env ${{ secrets.ENV_DATA }}

      - name: Install dependencies
        run: npm install

      - name: Build Next.js app
        run: 
            npm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Setup Buildx Docker
        uses: docker/setup-buildx-action@v3
        
      - name: Build and Push to Docker
        uses: docker/build-push-action@v6
        with: 
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_NAME }}:latest

      - name: SSH Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            mkdir -p ${{ secrets.DOCKERHUB_NAME }}
            cd ~/${{ secrets.DOCKERHUB_NAME }}/
            mkdir -p json
            rm -f json/_about.json && curl -o json/_about.json ${{ secrets.ABOUT_DATA }}
            rm -f json/_experiences.json && curl -o json/_experiences.json ${{ secrets.EXPERIENCE_DATA }}
            rm -f json/_projects.json && curl -o json/_projects.json ${{ secrets.PROJECT_DATA }}
            rm -f .env && curl -o .env ${{ secrets.ENV_DATA }}
            docker login docker.io -u ${{ secrets.DOCKERHUB_USERNAME }} -p secrets.DOCKERHUB_PASSWORD
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_NAME }}:latest
            docker compose down && docker compose start && docker logout